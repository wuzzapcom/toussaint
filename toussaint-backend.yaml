swagger: "2.0"
info:
  description: "API for Toussaint backend. Used for subscribing to games"
  version: "0.9.0"
  title: "Toussaint backend"
  contact:
    email: "wuzzapcom@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
schemes:
  - "http"
basePath: "/v1"
paths:
  /search:
    get:
      description: "Find games in PSN by name"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "name of searching game"
          required: true
          type: "string"
      responses:
        406:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Games"
  /games:
    get:
      description: "Get game ID by name"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "name of searching game"
          required: true
          type: "string"
      responses:
        400:
          description: "Bad request"
        200:
          description: "successful operation"
          schema:
            type: "string"
  /notifications:
    get:
      consumes:
        - "application/json" 
      description: "Method implementing PULL model: client established connection which is opened until client stops. 
      When notification appears it will immidiately send to client using this connection. This approach simplifies clients since
      they not have to check backend for notifications: server will send them as soon as possible."
      parameters:
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
      responses:
        200:
          description: connection established
          schema:
            $ref: "#/definitions/Notification"
    put:
      consumes:
        - "application/json"
      description: "Subscribes given client to given game price changes"
      parameters:
        - name: "client-id"
          in: "query"
          description: "id of client"
          required: true
          type: "string"
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
        - name: "game-id"
          in: "query"
          description: "game id that user wants to be subscribed"
          required: true
          type: "string"
      responses:
        201:
          description: "created"
        406:
          description: "Invalid input"
    delete:
      description: "Removes subscription of given client to given game"
      parameters:
        - name: "game-id"
          in: "query"
          description: "id of game for notifications"
          required: true
          type: "string"
        - name: "client-id"
          in: "query"
          description: "id of client"
          required: true
          type: "string"
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
      responses:
        200:
          description: "successful deletion"
        406:
          description: "Invalid input"

  /users:
    get:
      description: "Get all users for single client-type"
      parameters:
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Users"
    put:
      description: "Registers new user"
      parameters:
        - name: "client-id"
          in: "query"
          description: ""
          required: true
          type: "string"
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
      responses:
        201:
          description: "successful operation"
        409:
          description: "conflict"
  /list:
    get:
      description: "Generates list of games given user subscribed"
      produces:
        - "application/json"
      parameters:
        - name: "client-id"
          in: "query"
          description: ""
          required: true
          type: "string"
        - name: "client-type"
          in: "query"
          description: "type of client"
          required: true
          type: "string"
          enum:
            - "telegram"
        - name: "request-type"
          in: "query"
          required: true
          type: "string"
          enum:
            - "all"
            - "sale"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"

definitions:
  Games:
    type: "array"
    items:
      $ref: "#/definitions/Game"
  Game:
    type: "object"
    required:
      - "id"
      - "description"
    properties:
      id:
        type: "string"
      description:
        type: "string"
  Users:
    type: object
    required: 
      - ids
    properties:
      ids:
        type: string
  Notification:
    type: object
    required:
      - "games"
      - "userID"
    properties:
      games:
        $ref: "#/definitions/Game"
      userID:
        type: string